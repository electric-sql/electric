name: CI
on:
  push:
    branches:
      - main
  pull_request: null
  workflow_dispatch:
    inputs:
      environment:
        type: test_name
        default: tests
        required: false

env:
  OTP_VERSION: "24.3"
  ELIXIR_VERSION: "1.13"

jobs:
  deps:
    name: Get all the necessary dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # Tags are required for proper version inference, and this is the only way to pull the tags in
          fetch-depth: 0
      - run: ls -lah
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.KEY_TO_ACCESS_SATELLITE_JS_PROTO }}

      - name: Try to reuse cached deps
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mixdeps-${{ hashFiles('**/mix.lock') }}

      - name: Cache compiled code
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            _build/*/lib
            !_build/*/lib/electric
          key: ${{ runner.os }}-mixbuild-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - run: make deps pretest_compile

  tests:
    name: elixir tests
    runs-on: ubuntu-latest
    needs: deps
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: Prepare auxiliary services
        run: make start_dev_env

      - name: Restore dependencies
        id: cache-deps
        uses: actions/cache/restore@v3
        with:
          path: deps
          key: ${{ runner.os }}-mixdeps-${{ hashFiles('**/mix.lock') }}

      - name: Restore compiled code
        id: cache-build
        uses: actions/cache/restore@v3
        with:
          path: |
            _build/*/lib
            !_build/*/lib/electric
          key: ${{ runner.os }}-mixbuild-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.KEY_TO_ACCESS_SATELLITE_JS_PROTO }}

      - run: make pretest_compile

      - run: mix coveralls.lcov
        env:
          MIX_ENV: test

      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1
      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: cover/lcov.info
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true

  dialyzer:
    name: dialyzer and formatting
    runs-on: ubuntu-latest
    needs: deps
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: Restore dependencies
        id: cache-deps
        uses: actions/cache/restore@v3
        with:
          path: deps
          key: ${{ runner.os }}-mixdeps-${{ hashFiles('**/mix.lock') }}

      - name: Restore compiled code
        id: cache-build
        uses: actions/cache/restore@v3
        with:
          path: |
            _build/*/lib
            !_build/*/lib/electric
          key: ${{ runner.os }}-mixbuild-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - name: Cache PLT
        uses: actions/cache@v3
        with:
          path: _build/*/*.plt
          key: ${{ runner.os }}-plt-${{ github.ref_name }}
          restore-keys: ${{ runner.os }}-plt-

      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.KEY_TO_ACCESS_SATELLITE_JS_PROTO }}
      - run: make pretest_compile
      - name: Dialyzer
        run: make dialyzer
      - name: Check formatting
        run: make check-format

  e2e_tests:
    name: E2E tests
    runs-on: ubuntu-latest
    needs: deps
    env:
      VAXINE_IMAGE: europe-docker.pkg.dev/vaxine/vaxine-io/vaxine:latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: Restore dependencies
        id: cache-deps
        uses: actions/cache/restore@v3
        with:
          path: deps
          key: ${{ runner.os }}-mixdeps-${{ hashFiles('**/mix.lock') }}

      - name: Restore compiled code
        id: cache-build
        uses: actions/cache/restore@v3
        with:
          path: |
            _build/*/lib
            !_build/*/lib/electric
          key: ${{ runner.os }}-mixbuild-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
      - run: |
          echo "ELECTRIC_VERSION=$(make --silent print_version_from_git)" >> $GITHUB_ENV
      - run: make docker-build-ci
        env:
          ELECTRIC_IMAGE_NAME: ghcr.io/${{ github.repository }}/electric
      - run: make pretest_compile

      - name: Cache built lux
        uses: actions/cache@v3
        with:
          path: |
            integration_tests/lux/bin
            integration_tests/lux/ebin
            integration_tests/lux/priv
          key: ${{ runner.os }}-luxbuilt-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}

      - run: make lux
        working-directory: integration_tests

      - run: make vaxine
        working-directory: integration_tests

      - run: make postgres
        working-directory: integration_tests

      - run: make test
        id: tests
        working-directory: integration_tests
        env:
          ELECTRIC_IMAGE_NAME: ghcr.io/${{ github.repository }}/electric
          ELECTRIC_IMAGE_TAG: ${{ env.ELECTRIC_VERSION }}

      - name: Upload lux logs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: lux_logs
          path: integration_tests/lux_logs/run_*
