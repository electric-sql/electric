name: CI
on:
  push:
    branches:
      - main
  pull_request: null

env:
  VAXINE_IMAGE: europe-docker.pkg.dev/vaxine/vaxine-io/vaxine:latest

jobs:
  formatting_check:
    name: Formatting check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24.3"
          elixir-version: "1.13"
      - uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix
      - run: mix deps.get
      - run: mix format --check-formatted

  elixir_tests:
    name: Elixir tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24.3"
          elixir-version: "1.13"
      - name: Prepare auxillary services
        run: make start_dev_env
      - uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix
      - run: make pretest_compile
        env:
          MIX_ENV: test
      - run: mix coveralls.lcov
        env:
          MIX_ENV: test
      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v1
        with:
          coverage-files: cover/lcov.info
          artifact-name: code-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}

  e2e_tests:
    name: E2E tests
    runs-on: ubuntu-latest
    env:
      VAXINE_IMAGE: europe-docker.pkg.dev/vaxine/vaxine-io/vaxine:latest
    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: make docker-build-ci
        env:
          ELECTRIC_IMAGE_NAME: ghcr.io/${{ github.repository }}/electric
          ELECTRIC_IMAGE_TAG: ${{ env.GITHUB_HEAD_REF_SLUG }}

      - run: make lux
        working-directory: demo

      - run: make vaxine
        working-directory: demo

      - run: make postgres
        working-directory: demo

      - run: make test
        id: tests
        working-directory: demo

      - name: Upload lux logs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: lux_logs
          path: demo/lux_logs/run_*

      - run: make start_dev_env
      - run: make stop_dev_env
