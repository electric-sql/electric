name: Deploy All Examples To Production

on:
  workflow_dispatch:
    # This allows the workflow to be triggered manually from the GitHub Actions UI

concurrency:
  group: ${{ github.event_name == 'push' && 'prod-deploy-group' || format('examples-pr-{0}', github.event.number) }}

jobs:
  deploy:
    name: Deploy ${{ matrix.example.name }}
    environment: "Production"
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        example:
          - name: yjs
            path: examples/yjs
          - name: linearlite-read-only
            path: examples/linearlite-read-only
          - name: write-patterns
            path: examples/write-patterns
          - name: nextjs
            path: examples/nextjs
          - name: todo-app
            path: examples/todo-app
          - name: proxy-auth
            path: examples/proxy-auth
          - name: remix
            path: examples/remix
          - name: react
            path: examples/react

    env:
      DEPLOY_ENV: "production"
      SHARED_INFRA_VPC_ID: ${{ vars.SHARED_INFRA_VPC_ID }}
      SHARED_INFRA_CLUSTER_ARN: ${{ vars.SHARED_INFRA_CLUSTER_ARN }}
      SHARED_EXAMPLES_DATABASE_URI: ${{ secrets.SHARED_EXAMPLES_DATABASE_URI }}
      SHARED_EXAMPLES_POOLED_DATABASE_URI: ${{ secrets.SHARED_EXAMPLES_POOLED_DATABASE_URI }}
      SHARED_EXAMPLES_SOURCE_ID: ${{ vars.SHARED_EXAMPLES_SOURCE_ID }}
      SHARED_EXAMPLES_SOURCE_SECRET: ${{ secrets.SHARED_EXAMPLES_SOURCE_SECRET }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_DEFAULT_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_DEFAULT_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
      NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
      ELECTRIC_API: ${{ secrets.ELECTRIC_API }}
      ELECTRIC_ADMIN_API: ${{ secrets.ELECTRIC_ADMIN_API }}
      ELECTRIC_TEAM_ID: ${{ secrets.ELECTRIC_TEAM_ID }}
      # HONEYCOMB_API_KEY: ${{ secrets.HONEYCOMB_API_KEY }} TODO

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache SST state
        uses: actions/cache@v4
        with:
          path: .sst
          key: sst-cache-${{ matrix.example.name }}-${{ runner.os }}
          restore-keys: |
            sst-cache-${{ matrix.example.name }}-${{ runner.os }}

      - name: Deploy
        id: deploy
        working-directory: ./${{ matrix.example.path }}
        run: |
          pnpm --filter @electric-sql/client --filter @electric-sql/experimental --filter @electric-sql/react run build
          pnpm sst deploy --stage production

  test:
    name: Test Examples
    needs: deploy
    uses: ./.github/workflows/test_examples.yml
