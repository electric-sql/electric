diff --git a/lib/cjs/fetch.js b/lib/cjs/fetch.js
index ab40f1eeff0ec0a30043e45478f81cd1dc845adb..7cc2b684e40da2aac93c140d58f40ee4db8dd986 100644
--- a/lib/cjs/fetch.js
+++ b/lib/cjs/fetch.js
@@ -26,18 +26,20 @@ function fetchEventSource(input, _a) {
         let curRequestController;
         function onVisibilityChange() {
             curRequestController.abort();
-            if (!document.hidden) {
+            if (typeof document !== 'undefined' && !document.hidden) {
                 create();
             }
         }
-        if (!openWhenHidden) {
+        if (typeof document !== 'undefined' && !openWhenHidden) {
             document.addEventListener('visibilitychange', onVisibilityChange);
         }
         let retryInterval = DefaultRetryInterval;
         let retryTimer = 0;
         function dispose() {
-            document.removeEventListener('visibilitychange', onVisibilityChange);
-            window.clearTimeout(retryTimer);
+            if (typeof document !== 'undefined') {
+                document.removeEventListener('visibilitychange', onVisibilityChange);
+            }
+            clearTimeout(retryTimer);
             curRequestController.abort();
         }
         inputSignal === null || inputSignal === void 0 ? void 0 : inputSignal.addEventListener('abort', () => {
@@ -70,8 +72,8 @@ function fetchEventSource(input, _a) {
                 if (!curRequestController.signal.aborted) {
                     try {
                         const interval = (_a = onerror === null || onerror === void 0 ? void 0 : onerror(err)) !== null && _a !== void 0 ? _a : retryInterval;
-                        window.clearTimeout(retryTimer);
-                        retryTimer = window.setTimeout(create, interval);
+                        clearTimeout(retryTimer);
+                        retryTimer = setTimeout(create, interval);
                     }
                     catch (innerErr) {
                         dispose();
diff --git a/lib/esm/fetch.js b/lib/esm/fetch.js
index 31eb2278da53ba79d9fc78ea32d69f2d15f325ff..f0b503da8cb52feffc7fe02c81dac50252f8842c 100644
--- a/lib/esm/fetch.js
+++ b/lib/esm/fetch.js
@@ -23,18 +23,20 @@ export function fetchEventSource(input, _a) {
         let curRequestController;
         function onVisibilityChange() {
             curRequestController.abort();
-            if (!document.hidden) {
+            if (typeof document !== 'undefined' && !document.hidden) {
                 create();
             }
         }
-        if (!openWhenHidden) {
+        if (typeof document !== 'undefined' && !openWhenHidden) {
             document.addEventListener('visibilitychange', onVisibilityChange);
         }
         let retryInterval = DefaultRetryInterval;
         let retryTimer = 0;
         function dispose() {
-            document.removeEventListener('visibilitychange', onVisibilityChange);
-            window.clearTimeout(retryTimer);
+            if (typeof document !== 'undefined') {
+                document.removeEventListener('visibilitychange', onVisibilityChange);
+            }
+            clearTimeout(retryTimer);
             curRequestController.abort();
         }
         inputSignal === null || inputSignal === void 0 ? void 0 : inputSignal.addEventListener('abort', () => {
@@ -67,8 +69,8 @@ export function fetchEventSource(input, _a) {
                 if (!curRequestController.signal.aborted) {
                     try {
                         const interval = (_a = onerror === null || onerror === void 0 ? void 0 : onerror(err)) !== null && _a !== void 0 ? _a : retryInterval;
-                        window.clearTimeout(retryTimer);
-                        retryTimer = window.setTimeout(create, interval);
+                        clearTimeout(retryTimer);
+                        retryTimer = setTimeout(create, interval);
                     }
                     catch (innerErr) {
                         dispose();
