datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

generator electric {
  provider                 = "../../node_modules/@electric-sql/prisma-generator/dist/bin.js"
  output                   = "../generated"
  relationModel            = true
  writeNullishInModelTypes = true
}

generator client {
  provider = "prisma-client-js"
  output = "../generated/client"
}

model Items {
  value String @id
  nbr   Int?
}

model User {
  id      Int      @id
  name    String?
  posts   Post[]
  profile Profile?
}

model Post {
  id        Int    @id
  title     String @unique
  contents  String
  nbr       Int?
  authorId  Int
  author    User?  @relation(fields: [authorId], references: [id])
}

model Profile {
  id     Int    @id
  bio    String
  userId Int    @unique
  user   User?  @relation(fields: [userId], references: [id])
}

model DataTypes {
  id          Int       @id
  date        DateTime? @db.Date
  time        DateTime? @db.Time(3)
  timetz      DateTime? @db.Timetz(3)
  timestamp   DateTime? @unique @db.Timestamp(3)
  timestamptz DateTime? @db.Timestamptz(3)
  bool        Boolean?
  uuid        String?   @db.Uuid     /// @zod.string.uuid()
  int2        Int?      @db.SmallInt /// @zod.number.int().gte(-32768).lte(32767)
  int4        Int?                   /// @zod.number.int().gte(-2147483648).lte(2147483647)
  int8        BigInt?
  float4      Float?    @db.Real     /// @zod.custom.use(z.number().or(z.nan()))
  float8      Float?    @db.DoublePrecision /// @zod.custom.use(z.number().or(z.nan()))
  json        Json?
  relatedId   Int?
  related     Dummy?    @relation(fields: [relatedId], references: [id])
}

model Dummy {
  id          Int        @id
  timestamp   DateTime?  @db.Timestamp(3)
  datatype    DataTypes[]
}
