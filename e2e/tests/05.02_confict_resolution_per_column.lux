[doc Conflict resolution works per column]
[include _shared.luxinc]

[invoke setup]
[invoke electrify_table entries]

[newshell user_1_ws1]
    -$fail_pattern
    [invoke start_elixir_test 1]
    [invoke client_session 1 1]
    [invoke elixir_client_subscribe "entries"]
    !TestWsClient.send_data(conn, ProtocolHelpers.relation("public.entries"))
    ?:ok
    ?$eprompt

[newshell user_2_ws1]
    -$fail_pattern
    [invoke start_elixir_test 2]
    [invoke client_session 2 1]
    [invoke elixir_client_subscribe "entries"]
    !TestWsClient.send_data(conn, ProtocolHelpers.relation("public.entries"))
    ?:ok
    ?$eprompt

[shell pg_1]
    # Given an already-inserted row
    !INSERT INTO entries (id, content) VALUES ('00000000-0000-0000-0000-000000000000', 'original value');
    ?$psql

[shell user_1_ws1]
    ?%Electric.Satellite.SatOpInsert\{.*tags: \["(postgres_1@\d+)"\]
    [my seen_tag=$1]
    # Send one update touching a single column
    """!
    TestWsClient.send_data(conn, ProtocolHelpers.transaction("1", DateTime.utc_now(), [
        ProtocolHelpers.update("public.entries",
            %{"id" => "00000000-0000-0000-0000-000000000000"}, # pk
            %{"content" => "original value", "content_b" => nil}, # old
            %{"content" => "updated on client 1", "content_b" => nil}, # new
            ["$seen_tag"]
        )
    ]))
    """
    ?:ok
    ?$eprompt

[shell user_2_ws1]
    ?%Electric.Satellite.SatOpInsert\{.*tags: \["(postgres_1@\d+)"\]
    [my seen_tag=$1]
    # Send one update touching a single column
    """!
    TestWsClient.send_data(conn, ProtocolHelpers.transaction("1", DateTime.utc_now(), [
        ProtocolHelpers.update("public.entries",
            %{"id" => "00000000-0000-0000-0000-000000000000"}, # pk
            %{"content" => "original value", "content_b" => nil}, # old
            %{"content" => "original value", "content_b" => "updated on client 2"}, # new
            ["$seen_tag"]
        )
    ]))
    """
    ?:ok
    ?$eprompt


[shell user_2_ws1]
    # And then expect to see the same row sent from Electric back to Satellite, keeping commit timestamp
    ?rec \[\d+\]: %Electric.Satellite.SatOpLog\{(.*)origin: "client_2_1"(.*)values: \["00000000-0000-0000-0000-000000000000", "updated on client 1", "updated on client 2"\]

[cleanup]
    [invoke teardown]
