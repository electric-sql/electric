[doc Conflict resolution works per column]
[include _shared.luxinc]

[invoke setup]
[invoke electrify_table pg_1 entries]

[newshell user_1_ws1]
    -$fail_pattern
    [invoke start_elixir_test 1]
    [invoke client_session 1 1]
    [invoke elixir_client_subscribe "entries"]
    !Electric.Test.SatelliteWsClient.send_test_relation(conn)
    ?:ok
    ?$eprompt

[newshell user_2_ws1]
    -$fail_pattern
    [invoke start_elixir_test 2]
    [invoke client_session 2 1]
    [invoke elixir_client_subscribe "entries"]
    !Electric.Test.SatelliteWsClient.send_test_relation(conn)
    ?:ok
    ?$eprompt

[shell pg_1]
    # Given an already-inserted row
    !INSERT INTO entries (id, content) VALUES ('00000000-0000-0000-0000-000000000000', 'original value');
    ?$psql

[shell user_1_ws1]
    ?%Electric.Satellite.V\d+.SatOpInsert\{.*tags: \["(postgres_1@\d+)"\]
    [my seen_tag=$1]
    # Send one update touching a single column
    """!
    Electric.Test.SatelliteWsClient.entries_table_send_update(
        conn,
        "1", # lsn
        DateTime.utc_now() |> DateTime.to_unix(:millisecond),
        "00000000-0000-0000-0000-000000000000", # id
        %{"content" => "original value", "content_b" => nil}, # old
        %{"content" => "updated on client 1", "content_b" => nil}, # new
        ["$seen_tag"]
    )
    """
    ?:ok
    ?$eprompt

[shell user_2_ws1]
    ?%Electric.Satellite.V\d+.SatOpInsert\{.*tags: \["(postgres_1@\d+)"\]
    [my seen_tag=$1]
    # Send one update touching a single column
    """!
    Electric.Test.SatelliteWsClient.entries_table_send_update(
        conn,
        "1", # lsn
        DateTime.utc_now() |> DateTime.to_unix(:millisecond),
        "00000000-0000-0000-0000-000000000000", # id
        %{"content" => "original value", "content_b" => nil}, # old
        %{"content" => "original value", "content_b" => "updated on client 2"}, # new
        ["$seen_tag"]
    )
    """
    ?:ok
    ?$eprompt


[shell user_2_ws1]
    # And then expect to see the same row sent from Electric back to Satellite, keeping commit timestamp
    ?rec \[\d+\]: %Electric.Satellite.V\d+.SatOpLog\{(.*)origin: "client_2_1"(.*)values: \["00000000-0000-0000-0000-000000000000", "updated on client 1", "updated on client 2"\]

[cleanup]
    [invoke teardown]