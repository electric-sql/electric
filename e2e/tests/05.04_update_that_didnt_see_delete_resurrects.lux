[doc When an update coming from Satellite doesn't have the latest DELETE operation in the observed tags, it restores the row]
[include _shared.luxinc]

[invoke setup]
[invoke electrify_table entries]

[newshell user_1_ws1]
    -$fail_pattern
    [invoke start_elixir_test 1]
    [invoke client_session 1 1]
    [invoke elixir_client_subscribe "entries"]
    !TestWsClient.send_data(conn, ProtocolHelpers.relation("public.entries"))
    ?:ok
    ?$eprompt

[shell pg_1]
    !\pset tuples_only
    # Given an already-inserted row
    !INSERT INTO entries (id, content) VALUES ('00000000-0000-0000-0000-000000000000', 'original value');
    ?$psql
    # That was updated
    !UPDATE entries SET content = 'updated value' WHERE id = '00000000-0000-0000-0000-000000000000';
    ?$psql
    # And then deleted
    !DELETE FROM entries WHERE id = '00000000-0000-0000-0000-000000000000';
    ?$psql

[shell user_1_ws1]
    ?%Electric.Satellite.SatOpInsert\{.*tags: \["(postgres_1@\d+)"\]
    [my seen_tag=$1]
    # We do an update having "seen" only the insert
    """!
    TestWsClient.send_data(conn, ProtocolHelpers.transaction("1", DateTime.add(DateTime.utc_now(), 86400, :second), [
        ProtocolHelpers.update("public.entries",
            %{"id" => "00000000-0000-0000-0000-000000000000"}, # pk
            %{"content" => "original value", "content_b" => nil}, # old
            %{"content" => "original value", "content_b" => "new value"}, # new
            ["$seen_tag"]
        )
    ]))
    """
    ?:ok
    ?$eprompt

[shell electric]
    # Wait for it to be sent to PG
    ??pg_slot=postgres_1 [debug] Will send 2 to subscriber:
    ?pg_slot=postgres_1 \[debug\] Sending 8 messages to the subscriber: from #Lsn<0/[0-9A-F]+> to (#Lsn<0/33>)
    [my expected_lsn=$1]
    ??<StatusUpdate> [written_wal: $expected_lsn

[shell pg_1]
    # We expect for the row to get "resurrected", updating only modified columns
    !SELECT content, content_b FROM entries WHERE id = '00000000-0000-0000-0000-000000000000';
    ??updated value | new value
    ?$psql

[shell user_1_ws1]
    # And then expect to see the same row sent from Electric back to Satellite, keeping commit timestamp
    ?rec \[\d+\]: %Electric.Satellite.SatOpLog\{(.*)origin: "client_1_1"(.*)values: \["00000000-0000-0000-0000-000000000000", "updated value", "new value"\]

[cleanup]
    [invoke teardown]
