[doc NodeJS Satellite can resume its replication stream subscription after reconnecting even when not subscribed to any shapes]
[include _shared.luxinc]
[include _satellite_macros.luxinc]

[invoke setup]

[global migration1_vsn=20230719_01]
[global migration2_vsn=20230719_02]

# Create two migrations with electrified tables on the server.
[shell pg_1]
  [invoke migrate_pg $migration1_vsn "CREATE TABLE public.foo (id TEXT PRIMARY KEY);CALL electric.electrify('public.foo');"]
  [invoke migrate_pg $migration2_vsn "CREATE TABLE public.bar (id TEXT PRIMARY KEY);CALL electric.electrify('public.bar');"]

[invoke setup_client 1 "electric_1" 5133]

[shell satellite_1]
  # The client starts replication from scratch.
  ??no previous LSN, start replication from scratch
  ??[proto] send: #SatInStartReplicationReq{lsn: ,
  ??[proto] recv: #SatInStartReplicationResp

  ?\[proto\] recv: #SatOpLog\{.*#Migrate\{vsn: $migration1_vsn, for: foo
  ?\[proto\] recv: #SatOpLog\{.*#Migrate\{vsn: $migration2_vsn, for: bar

  [progress stopping client]
  !await client.stop(db)
  ?$node

  # Verify that the client retrieves previously stored LSN when it reestablishes the replication connection.
  [progress resuming client]
  [invoke electrify_db "originalDb" "electric_1" 5133 "[]"]
  ?$node

  -no previous LSN

  ?starting replication with lsn:
  ?\[proto\] send: #SatInStartReplicationReq\{lsn: [a-zA-Z0-9=]+,
  ??[proto] recv: #SatInStartReplicationResp

[cleanup]
  [invoke teardown]
