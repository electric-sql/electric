[global node=>]

[macro connect_to_electric host port migrations]
    !client = await import('./dist/client.js')
    ?$node
    # !migrations = await client.read_migrations(process.env.MIGRATION_DIRS + "/index.js")
    # ?$node
    !migrations = $migrations
    !db = await client.open_db( process.env.SATELLITE_DB_PATH + "/$LUX_SHELLNAME", \
                                "$host", \
                                $port, \
                                migrations)
    ?^$node
[endmacro]

[macro setup_client_with_migrations satellite_number electric port migrations]
    [invoke start_satellite $satellite_number]
    -$fail_pattern
    ?$node
    [invoke connect_to_electric $electric $port $migrations]
[endmacro]

[macro setup_client satellite_number electric port]
    [invoke setup_client_with_migrations $satellite_number $electric $port "[]"]
[endmacro]

[macro node_await_get match]
    [invoke wait-for "await client.get_items(db)" "${match}" 10 $node]
[endmacro]

[macro node_await_table match]
    [invoke wait-for "await client.get_tables(db)" "${match}" 10 $node]
[endmacro]

[macro node_await_column table column]
    [invoke wait-for "await client.get_columns(db, '${table}')" "${column}" 10 $node]
[endmacro]

[macro node_await_column_value table column value]
    [invoke wait-for "await client.get_item_columns(db, '${table}', '${column}')" $value 10 $node]
[endmacro]

[macro node_await_insert keys]
    !await client.insert_item(db, ${keys})
    ?$node
[endmacro]

[macro node_await_insert_extended keys]
    !await client.insert_extended_item(db, ${keys})
    ?$node
[endmacro]

[macro node_await_get_other match]
    [invoke wait-for "client.get_other_items(db)" "${match}" 10 $node]
[endmacro]

[macro node_await_insert_other keys]
    !client.insert_other_item(db, ${keys})
    ?$node
[endmacro]
