services:
  vaxine:
    image: "${VAXINE_IMAGE}"
    init: true
    environment:
      RING_SIZE: "1"
      ANTIDOTE_TXN_CERT: "false" # disabled because we must accept all transactions
      ANTIDOTE_TXN_PROT: "clocksi"
      ANTIDOTE_RECOVER_FROM_LOG: "true"
      ANTIDOTE_META_DATA_ON_START: "true"
      ANTIDOTE_SYNC_LOG: "true"
      ANTIDOTE_ENABLE_LOGGING: "true"
      ANTIDOTE_AUTO_START_READ_SERVERS: "true"
      COOKIE: "secret"
      UID: ${UID}
      GID: ${GID}
    volumes:
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    privileged: true

  electric:
    image: "${ELECTRIC_IMAGE}"
    environment:
      LOG_LEVEL: debug
      GLOBAL_CLUSTER_ID: integration-tests.electric
      MIGRATIONS_DIR: /migrations
      SATELLITE_AUTH_SIGNING_ISS: dev.electric-sql.com
      SATELLITE_AUTH_SIGNING_KEY: integration-tests-signing-key-example
    init: true
    privileged: true

  sysbench:
    image: "${SYSBENCH_IMAGE}"

  postgresql:
    image: "${POSTGRESQL_IMAGE}"
    environment:
      POSTGRES_DB: electric
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    volumes:
      - ./00_shared_init.sql:/docker-entrypoint-initdb.d/00_shared_init.sql:ro
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./postgres.conf:/etc/postgresql.conf:ro
    command:
      - -c
      - config_file=/etc/postgresql.conf
    cap_add:
      - SYS_PTRACE
    privileged: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U electric"]
    extra_hosts:
      - "host.docker.internal:host-gateway"

  satellite_client:
    image: "node:18"
    user: "${UID}:${GID}"
    environment:
      SATELLITE_AUTH_SIGNING_ISS: dev.electric-sql.com
      SATELLITE_AUTH_SIGNING_KEY: integration-tests-signing-key-example
      HOME: ${E2E_ROOT}/satellite_client
      SATELLITE_DB_PATH: "${SATELLITE_DB_PATH}"
      NODE_DISABLE_COLORS: 1
      TERM: dumb
      UID: ${UID}
      GID: ${GID}
    volumes:
      # Deliberately mount folder below root, so that yarn/npm would not try
      # to access .git directory, as they do not handle git ls-remote properly
      - ${E2E_ROOT}:${E2E_ROOT}:rw
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    privileged: true

  elixir_client:
    image: ${BUILDER_IMAGE}
    user: "${UID}:${GID}"
    environment:
      MIX_ENV: test
      MIX_HOME:       ${E2E_ROOT}/elixir_client/
      MIX_BUILD_ROOT: ${E2E_ROOT}/elixir_client/_build
      MIX_DEPS_PATH:  ${E2E_ROOT}/elixir_client/deps
      HEX_HOME:       ${E2E_ROOT}/elixir_client/.hex
      UID: ${UID}
      GID: ${GID}
    volumes:
      - ${PROJECT_ROOT}:${PROJECT_ROOT}:ro
      - ${E2E_ROOT}/elixir_client:${E2E_ROOT}/elixir_client
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    privileged: true
