[doc Verify Electric replicates data throughout a DB's WAL lifetime]

[include _macros.luxinc]

[global pg_container_name=replication-lifetime__pg]
[global num_items_per_batch=10]

[macro setup_pg_with_lsn lsn_pos]
  [invoke setup_pg_with_shell_name "pg-$lsn_pos" "-e ELECTRIC_PG_START_WAL=00000001$lsn_pos" ""]
[endmacro]


[macro validate_data_replication table_name]
  ## Start the sync service.
  [invoke setup_electric]

  [shell electric]
    ??[info] Starting replication from postgres

  ## Add some data
  [invoke start_psql]
  [shell psql]
    """!
    CREATE TABLE $table_name (
      id UUID PRIMARY KEY,
      val TEXT
    );
    """
    ??CREATE TABLE

    """!
    INSERT INTO
      $table_name (id, val)
    SELECT
      gen_random_uuid(),
      '#' || generate_series || ' initial val'
    FROM
      generate_series(1, $num_items_per_batch);
    """
    ??INSERT 0 $num_items_per_batch
    
  # Initialize a shape and collect the offset
  [shell client]
    [invoke shape_get_snapshot $table_name]
    ??HTTP/1.1 200 OK
    ?electric-handle: ([\d-]+)
    [local handle=$1]
    ?electric-offset: ([\w\d_]+)
    [local offset=$1]
    [loop i 1..$num_items_per_batch]
        ??"val":"#$i initial val"
    [endloop]

  # Add some more data
  [shell psql]
    """!
    INSERT INTO
      $table_name (id, val)
    SELECT
      gen_random_uuid(),
      '#' || generate_series || ' new val'
    FROM
      generate_series(1, $num_items_per_batch);
    """
    ??INSERT 0 $num_items_per_batch
    !\q
    ??$PS1

  [shell electric]
    ??[info] Received transaction
    [sleep 1]

  # Client should be able to continue same shape
  [shell client]
    [invoke shape_get $table_name $handle $offset]
    ??HTTP/1.1 200 OK
    [loop i 1..$num_items_per_batch]
        ??"val":"#$i new val"
    [endloop]
    ??$PS1

  ## Terminate electric
  [shell electric]
    !System.halt()
    ??$PS1
[endmacro]

###

## PG with WAL set at absolute beginning
[invoke setup_pg_with_lsn "0000000000000000"]
[invoke validate_data_replication "items_wal_start"]
[invoke teardown_container $pg_container_name]

## PG with WAL set close to middle of 64-bit LSN range
[invoke setup_pg_with_lsn "7FFFFFFF000000FF"]
[invoke validate_data_replication "items_wal_mid"]
[invoke teardown_container $pg_container_name]

## PG with WAL close to end of 64-bit LSN range
[invoke setup_pg_with_lsn "FFFFFFFF000000FF"]
[invoke validate_data_replication "items_wal_end"]
  
[cleanup]
  [invoke teardown]
