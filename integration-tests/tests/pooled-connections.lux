[doc Verify Electric handles data replication with pooled connection]

[include _macros.luxinc]

[global pg_container_name=poold-connections__pg]

###

## Start a new Postgres cluster
[invoke setup_pg_with_pooler "" ""]

## Add some data
[invoke start_psql]
[shell psql]
  """!
  CREATE TABLE items (
    id UUID PRIMARY KEY,
    val TEXT
  );
  """
  ??CREATE TABLE

  """!
  INSERT INTO
    items (id, val)
  SELECT
    gen_random_uuid(),
    '#' || generate_series || ' initial val'
  FROM
    generate_series(1, 10);
  """
  ??INSERT 0 10

## Start the sync service.
[invoke setup_electric_with_pooler]

[shell electric]
  ??[info] Starting replication from postgres
  
# Initialize a shape and collect the offset
[shell client]
  # strip ANSI codes from response for easier matching
  !curl -i -X GET "http://localhost:3000/v1/shape?table=items&offset=-1" | sed -r "s/\x1B\[[0-9;]*[mK]//g"
  ?electric-handle: ([\d-]+)
  [local handle=$1]
  ?electric-offset: ([\w\d_]+)
  [local offset=$1]
  ??"val":"#10 initial val"

## Add some more data
[shell psql]
  """!
  INSERT INTO
    items (id, val)
  SELECT
    gen_random_uuid(),
    '#' || generate_series || ' new val'
  FROM
    generate_series(1, 10);
  """
  ??INSERT 0 10

# Client should be able to continue same shape
[shell client]
  [sleep 2]
  !curl -i -X GET "http://localhost:3000/v1/shape?table=items&handle=$handle&offset=$offset"
  ??HTTP/1.1 200 OK
  ??"val":"#10 new val"

[cleanup]
  [invoke teardown]
