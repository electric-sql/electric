[global _global_log_string_counter=0]
[macro log string]
    [my old=$LUX_SHELLNAME]
[shell log]
    !echo $((${_global_log_string_counter}+1))
    """?
    (.*)
    SH-PROMPT:
    """
    [global _global_log_string_counter=$1]
    [progress \n $_global_log_string_counter. $string \n]
[shell $old]
[endmacro]

[macro ok]
    ?SH-PROMPT:
    !echo ==$$?==
    ?^==0==
[endmacro]

[macro ok2 prompt]
    ?$prompt
    !echo ==$$?==
    ?^==0==
[endmacro]

[macro wait-for command match max_time prompt]
    [loop i 1..$max_time]
        @$match
        !$command
        ??$command
        ?$prompt
        [sleep 1]
    [endloop]
    # The last prompt won't match since the loop pattern will
    # match before it, so match it here instead.
    ?$prompt

    # Sync up after the loop.
    !$command
    ??$command
    ?$prompt
[endmacro]

[macro wait_name name]
    [loop iter 1..10]
          @accepting connections
          !docker exec -it -e PGPASSWORD=password single_dc_${name}_1 pg_isready -U electric
          ?SH-PROMPT:
          [sleep 1]
    [endloop]
    ?SH-PROMPT:
[endmacro]

[macro wait_logs name match_spec]
    [loop iter 1..10]
          @${match_spec}
          !docker logs single_dc_${name}_1
          [sleep 1]
    [endloop]
[endmacro]

[macro wait_port host port]
    [loop iter 1..10]
          @==0==
          !nc -z $host $port; echo ==$$?==
          ?SH-PROMPT:
          [sleep 1]
    [endloop]
[endmacro]

[macro start_psql name]
    [loop iter 1..10]
        @electric=#
        !make docker-psql-${name}
        ?SH-PROMPT:
        [sleep 1]
    [endloop]
[endmacro]

[macro start_elixir_test id]
    !make start_elixir_test_${id}
    [invoke ok2 $dprompt]
    !mix local.hex --force --no-color
    ?archives
    [invoke ok2 $dprompt]
    !iex -S mix run --no-start --no-deps-check -e "Application.put_env(:elixir, :ansi_enabled, false)"
    ?$eprompt
[endmacro]

[macro sysbench_prepare host table_size tables]
    !sysbench --db-driver=pgsql \
              --table-size=${table_size} \
              --tables=${tables} \
              --threads=1 \
              --pgsql-host=${host} \
              --pgsql-port=5432 \
              --pgsql-user=electric \
              --pgsql-password=password \
              --pgsql-db=electric \
              oltp_write_only prepare
    [invoke ok2 $dprompt]
[endmacro]

[macro sysbench_run host table_size tables]
    !sysbench --db-driver=pgsql \
              --table-size=${table_size} \
              --tables=${tables} \
              --threads=1 \
              --time=10 \
              --report-interval=1 \
              --pgsql-host=${host} \
              --pgsql-port=5432 \
              --pgsql-user=electric \
              --pgsql-password=password \
              --pgsql-db=electric \
              oltp_write_only run
    [invoke ok2 $dprompt]
[endmacro]
