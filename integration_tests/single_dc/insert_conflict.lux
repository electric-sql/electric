[doc Test one direction replication from pg_2 to pg_1, when pg_1 already has a record for the primary key. We can force this conflict by disabling replication consumption on pg_2]

[global fail_pattern=[Ee][Rr][Rr][Oo][Rr]]
[global psql=electric]

[include shared.luxinc]
[invoke setup]

[shell pg_2]
    !UPDATE pg_catalog.pg_subscription SET subenabled = false;
    ?$psql

[shell pg_1]
    !INSERT INTO entries (id, content) VALUES ('dab0679d-fa41-476f-8615-738b08773521', 'Hello from a');
    ?INSERT 0 1

[shell electric]
    ?COMMIT TRANSACTION

[shell pg_2]
    !INSERT INTO entries (id, content) VALUES ('dab0679d-fa41-476f-8615-738b08773521', 'Hello from b');
    ?INSERT 0 1

[shell electric]
    ?pg_slot=postgres_1 origin=postgres_1 \[debug\] Sending \d messages to the subscriber

[shell pg_1]
    [loop iter 1..10]
        @Hello from b
        !select * from entries;
        ?electric=
        [sleep 1]
    [endloop]

[cleanup]
    [invoke teardown]

