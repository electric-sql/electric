services:
  vaxine:
    image: "${VAXINE_IMAGE}"
    environment:
      RING_SIZE: "1"
      ANTIDOTE_TXN_CERT: "false" # disabled because we must accept all transactions
      ANTIDOTE_TXN_PROT: "clocksi"
      ANTIDOTE_RECOVER_FROM_LOG: "true"
      ANTIDOTE_META_DATA_ON_START: "true"
      ANTIDOTE_SYNC_LOG: "true"
      ANTIDOTE_ENABLE_LOGGING: "true"
      ANTIDOTE_AUTO_START_READ_SERVERS: "true"
      COOKIE: "secret"
      UID: ${UID}
      GID: ${GID}
    volumes:
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    privileged: true

  electric:
    image: "${ELECTRIC_IMAGE}"
    privileged: true

  sysbench:
    image: "${SYSBENCH_IMAGE}"

  elixir_client:
    image: "hexpm/elixir:${ELIXIR_VERSION}-erlang-${OTP_VERSION}-debian-${DEBIAN_VERSION}"
    user: "${UID}:${GID}"
    environment:
      UID: ${UID}
      GID: ${GID}
      MIX_HOME: ${PROJECT_ROOT}
      MIX_ENV: test
    volumes:
      - ${PROJECT_ROOT}:${PROJECT_ROOT}
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    privileged: true

  postgresql:
    image: "${POSTGRESQL_IMAGE}"
    environment:
      POSTGRES_DB: electric
      POSTGRES_USER: electric
      POSTGRES_PASSWORD: password
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    volumes:
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro
      - ./postgres.conf:/etc/postgresql.conf:ro
    command:
      - -c
      - config_file=/etc/postgresql.conf
    cap_add:
      - SYS_PTRACE
    privileged: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U electric"]
    extra_hosts:
      - "host.docker.internal:host-gateway"

  satellite_client:
    image: "node:18"
    user: "${UID}:${GID}"
    environment:
      HOME: ${PROJECT_ROOT}/integration_tests/satellite_client
      SATELLITE_DB_PATH: "${SATELLITE_DB_PATH}"
      NODE_DISABLE_COLORS: 1
      TERM: dumb
      UID: ${UID}
      GID: ${GID}
    volumes:
      # Deliberately mount folder below root, so that yarn/npm would not try
      # to access .git directory, as they do not handle git ls-remote properly
      - ${PROJECT_ROOT}/integration_tests:${PROJECT_ROOT}/integration_tests:rw
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    privileged: true
