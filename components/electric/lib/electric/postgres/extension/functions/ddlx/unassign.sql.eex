CREATE OR REPLACE PROCEDURE <%= schema() %>.unassign(
    assign_table_full_name text,
    scope text,
    user_column_name text,
    role_name_string text,
    role_column_name text
) SECURITY DEFINER AS $$
DECLARE
    -- assign_schema        TEXT;
    -- assign_table         TEXT;
    assignment_id        uuid;
    assignment_name      TEXT;
    scope_table_not_null TEXT;
    role_name_not_null   TEXT;
    role_column_not_null TEXT;

BEGIN
    IF role_name_string IS NULL THEN role_name_not_null = '__none__'; ELSE role_name_not_null = role_name_string; END IF;
    IF role_column_name IS NULL THEN role_column_not_null = '__none__'; ELSE role_column_not_null = role_column_name; END IF;
    IF scope IS NULL THEN scope_table_not_null = '__none__'; ELSE scope_table_not_null = scope; END IF;

    -- SELECT n[1], n[2] INTO assign_schema, assign_table FROM parse_ident(assign_table_full_name) n;

    SELECT id FROM <%= assignments_table() %>
        WHERE table_name = assign_table_full_name
        AND scope_table = scope_table_not_null
        AND user_column = user_column_name
        AND role_name = role_name_not_null
        AND role_column = role_column_not_null
        INTO assignment_id;

    assignment_name = REPLACE(format('%s', assignment_id), '-', '_');

    -- remove triggers
    EXECUTE format('DROP TRIGGER IF EXISTS electric_cleanup_role_%s ON <%= schema() %>.assignment_%s_join;',
        assignment_name,
        assignment_name
    );

    EXECUTE format('DROP TRIGGER IF EXISTS electric_insert_role_%s ON %s;',
        assignment_name,
        assign_table_full_name
    );

    EXECUTE format('DROP TRIGGER IF EXISTS electric_update_role_%s ON %s;',
        assignment_name,
        assign_table_full_name
    );

    -- remove functions
    EXECUTE format('DROP FUNCTION IF EXISTS <%= schema() %>.cleanup_role_%s;',
        assignment_name
    );

    EXECUTE format('DROP FUNCTION IF EXISTS <%= schema() %>.upsert_role_%s;',
        assignment_name
    );

    -- remove join table
    EXECUTE format('DROP TABLE IF EXISTS <%= schema() %>.assignment_%s_join;',
        assignment_name
    );

    -- remove assignment
    DELETE FROM <%= assignments_table() %> WHERE id = assignment_id;
END;
$$ LANGUAGE plpgsql;

