CREATE OR REPLACE PROCEDURE <%= schema() %>.alter_shadow_table(
    schema_name name,
    table_name name,
    action text,
    col_name name,
    col_type text
)
SECURITY DEFINER
LANGUAGE PLPGSQL
AS $function$
DECLARE
    reordered_column_definition text := '';
    shadow_column_definition text := '';
    tombstone_column_definition text := '';
    shadow_table_name name;
    tombstone_table_name name;
    table_oid oid;
    primary_key_list text[];
    non_pk_column_list text[] := array[]::text[];
BEGIN
    RAISE DEBUG 'alter_shadow_table %.% % % %', schema_name, table_name, action, col_name, col_type;
    shadow_table_name := 'shadow__' || schema_name || '__' || table_name;
    tombstone_table_name := 'tombstone__' || schema_name || '__' || table_name;

    reordered_column_definition := format(E'    ADD COLUMN %I %s,\n', '__reordered_' || col_name, col_type);
    shadow_column_definition := format(E'    ADD COLUMN %I <%= schema() %>.tag', '_tag_' || col_name);
    tombstone_column_definition := format(E'    ADD COLUMN %I %s\n', col_name, col_type);

    EXECUTE format(
        E'ALTER TABLE <%= schema() %>.%I\n%s;',
        shadow_table_name,
        reordered_column_definition || shadow_column_definition
    );
    EXECUTE format(
        E'ALTER TABLE <%= schema() %>.%I\n%s;',
        tombstone_table_name,
        tombstone_column_definition
    );

    SELECT r.table_oid INTO table_oid FROM <%= schema() %>.__resolve_table_from_names(schema_name, table_name) r;
    SELECT <%= schema() %>.__primary_key_list(table_oid) INTO primary_key_list;

    SELECT array_agg(c.col_name) INTO non_pk_column_list
        FROM electric.lookup_columns(table_oid) c WHERE NOT col_primary;

    /*
    We regenerate column-dependent functions, but not the triggers themselves
    since one of the triggers is `CREATE CONSTRAINT TRIGGER` which cannot be
    `CREATE OR REPLACE`-ed. This is a little less flexible (if trigger logic
    gets altered, `install_functions_and_triggers` will need to be reran
    explicitly) but safer since `DROP` + `CREATE` can have some unexpected
    effects.
    */
    PERFORM <%= schema() %>.install_conflict_resolution_functions(schema_name, table_name, primary_key_list, non_pk_column_list);
END;
$function$;


